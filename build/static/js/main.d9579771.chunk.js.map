{"version":3,"sources":["config.js","components/auth.js","components/Nav.js","components/Twitch.js","components/BtnP1.js","components/IdleTimer.js","components/MainP1.js","components/BtnP2.js","components/MainP2.js","components/LogIn.js","components/CheckRandom.js","components/CheckRandom2.js","components/SignUp.js","components/SubmitPasscode.js","components/SubmitPasscode2.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","currentUser","setCurrentUser","useEffect","auth","onAuthStateChanged","user","Provider","value","Nav","useContext","db","firestore","blogs","setBlogs","CustomDialogContent","className","map","blog","displayName","countP1cheerBtn","countP1jeerBtn","countP2cheerBtn","countP2jeerBtn","countP1win","countP2win","countSendMessage","collection","orderBy","onSnapshot","querySnapshot","items","forEach","doc","push","data","id","onClick","console","log","uid","update","isOnline","isP1team","isP2team","then","signOut","catch","error","errorMessage","message","alert","a","CustomDialog","title","showCloseIcon","Twitch","channel","theme","width","height","onVideoPause","BtnP1","countMessage","countP1cheer","countP2jeer","client","require","Client","options","debug","messagesLogLevel","connection","reconnect","secure","identity","username","password","channels","connect","get","say","IdleTimerContainer","idleTimerRef","useRef","ref","timeout","onIdle","MainP1","checkUser","setcheckUser","isRunning","setIsRunning","setSeconds","setCount","checkAnswered","answerFirstQuestion","item","p1team","Alert","window","onbeforeunload","setInterval","checkanswer1","checkanswer2","answerSecordQuestion","seconds","location","href","clearInterval","IdleTimer","to","BtnP2","countP1jeer","countP2cheer","MainP2","LogIn","answer","checkVerify","checkAnswerQuestion","countP1team","countP2team","onSubmit","e","preventDefault","target","elements","email","signInWithEmailAndPassword","cred","emailVerified","random","min","max","Math","ceil","floor","getRandomInt","p2team","ConditionToMain","type","name","placeholder","required","initPasscode","generate","length","numbers","CheckRandom","passcode","set","passcode1","CheckRandom2","passcode2","SignUp","cPassword","display_Name","createUserWithEmailAndPassword","updateProfile","uID","createdID","Date","sendEmailVerification","SubmitPasscode","setPasscode","submitData","SubmitPasscode2","submitData2","diff","date1","date2","abs","getDifferenceInMinutes","getTime","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9579771.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp( {\r\n    apiKey: \"AIzaSyCO6BpMApQvqzEGUpBUmwJPR3rwGsPG3Jw\",\r\n    authDomain: \"apg-interface.firebaseapp.com\",\r\n    projectId: \"apg-interface\",\r\n    storageBucket: \"apg-interface.appspot.com\",\r\n    messagingSenderId: \"1068638183389\",\r\n    appId: \"1:1068638183389:web:55e4fa3d6319b4766d6034\",\r\n    measurementId: \"G-QYXLE81GN1\"\r\n});\r\n\r\nexport default firebaseConfig;","import React, {useState, useEffect} from 'react';\r\nimport firebaseConfig from '../config'\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() =>{\r\n        firebaseConfig.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n            //alert(user)\r\n        })\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <p>Loading.....</p>;\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{currentUser}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useState, useEffect, Component } from 'react'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { CustomDialog } from 'react-st-modal'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Nav = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n    const [blogs, setBlogs] = useState([])\r\n    function getUserData() {\r\n        db.collection('user').orderBy(\"countSendMessage\", \"desc\").onSnapshot(querySnapshot => {\r\n            const items = [];\r\n            querySnapshot.forEach(doc => {\r\n                items.push(doc.data())\r\n            });\r\n            setBlogs(items);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function CustomDialogContent() {\r\n        return (\r\n            <div>\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 mx-auto text-center mb-0 \">\r\n                            <div className=\"responsive-iframe\">\r\n                                <div className=\"row\">\r\n                                    <h6 className=\"col col-2\">Name</h6>\r\n                                    <h6 className=\"col\">Cheer Player 1</h6>\r\n                                    <h6 className=\"col\">Jeer Player 1</h6>\r\n                                    <h6 className=\"col\">Cheer Player 2</h6>\r\n                                    <h6 className=\"col\">Jeer Player 2</h6>\r\n                                    <h6 className=\"col\">Winner Player 1 team</h6>\r\n                                    <h6 className=\"col\">Winner Player 2 team</h6>\r\n                                    <h6 className=\"col\">Total</h6>\r\n                                </div>\r\n                                {\r\n                                    blogs.map(blog => {\r\n                                        return (\r\n                                            <div className=\"row row-col-2\" key={blog.displayName}>\r\n                                                \r\n                                                <p className=\"col col-2\">{blog.displayName}</p>\r\n                                                \r\n                                                <p className=\"col\">{blog.countP1cheerBtn}</p>\r\n                                                <p className=\"col\">{blog.countP1jeerBtn}</p>\r\n                                                <p className=\"col\">{blog.countP2cheerBtn}</p>\r\n                                                <p className=\"col\">{blog.countP2jeerBtn}</p>\r\n                                                <p className=\"col\">{blog.countP1win}</p>\r\n                                                <p className=\"col\">{blog.countP2win}</p>\r\n                                                <p className=\"col\">{blog.countSendMessage}</p>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n\r\n    function Signout() {\r\n        console.log(currentUser.uid)\r\n        db.collection('user').doc(currentUser.uid).update({\r\n\r\n            isOnline: false,\r\n            isP1team: false,\r\n            isP2team: false,\r\n\r\n        }).then(() => {\r\n            firebaseConfig.auth().signOut()\r\n        }).catch(error => {\r\n            var errorMessage = error.message;\r\n            alert(errorMessage, 'Error!');\r\n            //alert(errorMessage);\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"thead-dark\">\r\n            <div className=\"row row-cols-2\">\r\n                <div className=\"col-lg-12 mx-auto text-center mb-0 mt-3 \">\r\n                    <label className=\"col-md-2\">Display Name:</label>\r\n                    <span className=\"col-md-4\" id=\"display-name\">{currentUser.displayName}</span>\r\n                    <label className=\"col-md-2\"><button className=\"btn btn-outline-info\" onClick={() => Signout()} >Sign out</button></label>\r\n                    <button className=\"btn btn-outline-info\"\r\n                        onClick={async () => {\r\n                            const result = await CustomDialog(<CustomDialogContent />, {\r\n                                title: 'Leaderboard',\r\n                                showCloseIcon: true,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Leaderboard\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Nav;","\r\nimport React, { useContext } from 'react'\r\nimport { AuthContext } from './auth'\r\nimport { TwitchEmbed } from 'react-twitch-embed';\r\n\r\nconst Twitch = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n\r\n    <div className=\"containerIF2\">\r\n      <div className=\"row row-cols-sm-1\">\r\n        <div className=\"col-lg-12 mx-auto text-start mb-0 \">\r\n          <div className=\"containerIF\">\r\n\r\n            <TwitchEmbed\r\n              channel=\"ligoligo12\"\r\n              id=\"ligoligo12\"\r\n              theme=\"dark\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              onVideoPause={() => console.log(':(')}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Twitch;","import React, { useContext } from 'react'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\n\r\n\r\nconst BtnP1 = () =>{\r\n    const { currentUser } = useContext(AuthContext);\r\n    let countMessage = 0;\r\n    let countP1cheer = 0;\r\n    let countP2jeer = 0;\r\n    const db = firebaseConfig.firestore();\r\n\r\n    const tmi = require('tmi.js');\r\n    const client = new tmi.Client({\r\n        options: { debug: true, messagesLogLevel: \"info\" },\r\n        connection: {\r\n            reconnect: true,\r\n            secure: true\r\n        },\r\n        identity: {\r\n            username: 'ligoligo12',\r\n            password: 'oauth:2adeuj6p5ui8ujtxmqwkf55sk5janf'\r\n        },\r\n        channels: ['ligoligo12']\r\n    });\r\n    client.connect().catch(console.error);\r\n\r\n\r\n    const handleP1 = () => {\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            countMessage = data.data().countSendMessage\r\n            countP1cheer = data.data().countP1cheerBtn\r\n            countP2jeer = data.data().countP2jeerBtn\r\n            //console.log(data.data().countSendMessage)\r\n            //alert(countMessage)\r\n        }).then(() => {\r\n            client.say(`#ligoligo12`, `@${currentUser.displayName}, p1+`);\r\n            countP1cheer++;\r\n            countMessage++;\r\n            db.collection('user').doc(currentUser.uid).update({\r\n\r\n                countSendMessage: countMessage,\r\n                countP1cheerBtn: countP1cheer\r\n\r\n\r\n            })\r\n        })\r\n    }\r\n    const handleP2 = () => {\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            countMessage = data.data().countSendMessage\r\n            countP1cheer = data.data().countP1cheerBtn\r\n            countP2jeer = data.data().countP2jeerBtn\r\n            //console.log(data.data().countSendMessage)\r\n            //alert(countMessage)\r\n        }).then(() => {\r\n            client.say(`#ligoligo12`, `@${currentUser.displayName}, p2-`);\r\n            countP2jeer++;\r\n            countMessage++;\r\n            db.collection('user').doc(currentUser.uid).update({\r\n\r\n                countSendMessage: countMessage,\r\n                countP2jeerBtn: countP2jeer\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"containerIF2\">\r\n                <div className=\"row row-cols-2\">\r\n                    <button className=\"btn btn-success\" onClick={handleP1}>P1+</button>\r\n                    <button className=\"btn btn-danger\" onClick={handleP2}>P2-</button>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BtnP1;","import React, {useRef,useContext} from 'react'\r\nimport IdelTimer from 'react-idle-timer'\r\nimport firebaseConfig from '../config'\r\nimport { AuthContext } from './auth'\r\n\r\n\r\nfunction IdleTimerContainer(){\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n    const idleTimerRef = useRef(null)\r\n    const onIdle = () =>{\r\n        db.collection('user').doc(currentUser.uid).update({\r\n\r\n            isOnline: false,\r\n            isP1team: false,\r\n            isP2team: false,\r\n\r\n        }).then(() => {\r\n            firebaseConfig.auth().signOut()\r\n        }).catch(error => {\r\n            var errorMessage = error.message;\r\n            alert(errorMessage, 'Error!');\r\n            //alert(errorMessage);\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            <IdelTimer ref={idleTimerRef} timeout = {180 * 1000} onIdle={onIdle}></IdelTimer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IdleTimerContainer","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport Nav from './Nav'\r\nimport Twitch from './Twitch'\r\nimport BtnP1 from './BtnP1'\r\nimport { Alert, Confirm } from 'react-st-modal'\r\nimport IdleTimerContainer from './IdleTimer'\r\n\r\n\r\nconst MainP1 = () => {\r\n\r\n    //const db = firebaseConfig.firestore();\r\n    //let countUser=0;\r\n    const { currentUser } = useContext(AuthContext);\r\n    //let checkUser = false;\r\n    const db = firebaseConfig.firestore();\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n\r\n    let checkTotalUser;\r\n    const [count, setCount] = useState([])\r\n    function getCurrentUserOnWeb() {\r\n        //console.log(\"czxczxczxc\")\r\n        db.collection('countuser').doc('onweb').onSnapshot(doc => {\r\n            const item = [];\r\n            item.push(doc.data())\r\n            setCount(item);\r\n            checkTotalUser = doc.data().p1team\r\n            //alert(count)\r\n            //alert(doc.data().p1team)\r\n        })\r\n\r\n    }\r\n\r\n    function checkAnswered() {\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            const checkanswer1 = data.data().answerFirstQuestion\r\n            if (!checkanswer1) {\r\n                db.collection('user').doc(currentUser.uid).update({\r\n\r\n                    isOnline: false,\r\n                    isP1team: false,\r\n                    isP2team: false,\r\n\r\n                }).then(() => {\r\n                    firebaseConfig.auth().signOut()\r\n                }).catch(error => {\r\n                    var errorMessage = error.message;\r\n                    alert(errorMessage, 'Error!');\r\n                    //alert(errorMessage);\r\n                })\r\n            }\r\n            else {\r\n                getCurrentUserOnWeb();\r\n                Alert(\"Welcome to Player 1 team!!!!!\", 'Welcome')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log(count)\r\n        //console.log(\"asdasdasdasd\")\r\n        if (currentUser) {\r\n            //setcheckUser(true);\r\n            checkAnswered();\r\n        }\r\n        window.onbeforeunload = confirmExit;\r\n\r\n        function confirmExit() {\r\n            db.collection('user').doc(currentUser.uid).update({\r\n\r\n                isOnline: false,\r\n                isP1team: false,\r\n                isP2team: false,\r\n\r\n            }).catch(error => {\r\n                var errorMessage = error.message;\r\n                alert(errorMessage, 'Error!');\r\n                //alert(errorMessage);\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isRunning) {\r\n            //alert(\"re\")\r\n            const id = window.setInterval(() => {\r\n                db.collection('user').doc(currentUser.uid).get().then(data => {\r\n                    const checkanswer1 = data.data().answerFirstQuestion\r\n                    const checkanswer2 = data.data().answerSecordQuestion\r\n                    setSeconds(seconds => seconds + 1)\r\n                    if (checkanswer1 && checkanswer2) {\r\n                        setIsRunning(isRunning => false)\r\n                        console.log(checkanswer1, checkanswer2)\r\n                        //console.log(\"isRunning:\"+isRunning)\r\n                    }\r\n                    else {\r\n\r\n\r\n                        setIsRunning(isRunning => false)\r\n                        window.location.href = \"/submit2\"\r\n                        // Сonfirmation confirmed\r\n\r\n\r\n                        //Alert(\"Please do the second questionnaire on this link:\" + \" https://www.surveymonkey.com/r/6KHX3TK.\", 'Please do a questionnaire');\r\n                        //window.location.href = \"/submit2\"\r\n                    }\r\n\r\n                    //console.log(\"isRunning:\"+isRunning)\r\n                })\r\n\r\n            }, 360000)\r\n            //console.log(\"isRunning:\"+isRunning)\r\n            return () => window.clearInterval(id);\r\n        }\r\n\r\n    }, [isRunning])\r\n\r\n\r\n    if (!currentUser) {\r\n\r\n        //setcheckUser(true);\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    if (currentUser && checkUser) {\r\n        db.collection('user').doc(currentUser.uid).update({\r\n            isOnline: true,\r\n            isP2team: false,\r\n            isP1team: true\r\n\r\n        })\r\n        //setcheckLogout(false)\r\n        setcheckUser(false);\r\n        //alert(\"logout\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <Twitch />\r\n            <BtnP1 />\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MainP1;","import React, { useContext } from 'react'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\n\r\n\r\nconst BtnP2 = () =>{\r\n    const { currentUser } = useContext(AuthContext);\r\n    let countMessage = 0;\r\n    let countP1jeer = 0;\r\n    let countP2cheer = 0;\r\n    const db = firebaseConfig.firestore();\r\n\r\n    const tmi = require('tmi.js');\r\n    const client = new tmi.Client({\r\n        options: { debug: true, messagesLogLevel: \"info\" },\r\n        connection: {\r\n            reconnect: true,\r\n            secure: true\r\n        },\r\n        identity: {\r\n            username: 'ligoligo12',\r\n            password: 'oauth:2adeuj6p5ui8ujtxmqwkf55sk5janf'\r\n        },\r\n        channels: ['ligoligo12']\r\n    });\r\n    client.connect().catch(console.error);\r\n\r\n\r\n    const handleP1 = () => {\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            countMessage = data.data().countSendMessage\r\n            countP1jeer = data.data().countP1jeerBtn\r\n            countP2cheer = data.data().countP2cheerBtn\r\n            //console.log(data.data().countSendMessage)\r\n            //alert(countMessage)\r\n        }).then(() => {\r\n            client.say(`#ligoligo12`, `@${currentUser.displayName}, p1-`);\r\n            countP1jeer++\r\n            countMessage++\r\n            db.collection('user').doc(currentUser.uid).update({\r\n\r\n                countSendMessage: countMessage,\r\n                countP1jeerBtn: countP1jeer,\r\n\r\n            })\r\n        })\r\n    }\r\n    const handleP2 = () => {\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            countMessage = data.data().countSendMessage\r\n            countP1jeer = data.data().countP1jeerBtn\r\n            countP2cheer = data.data().countP2cheerBtn\r\n            //console.log(data.data().countSendMessage)\r\n            //alert(countMessage)\r\n        }).then(() => {\r\n            client.say(`#ligoligo12`, `@${currentUser.displayName}, p2+`);\r\n            countP2cheer++\r\n            countMessage++\r\n            db.collection('user').doc(currentUser.uid).update({\r\n\r\n                countSendMessage: countMessage,\r\n                countP2cheerBtn: countP2cheer\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"containerIF2\">\r\n                <div className=\"row row-cols-2\">\r\n                    <button className=\"btn btn-success\" onClick={handleP2}>P2+</button>\r\n                    <button className=\"btn btn-danger\" onClick={handleP1}>P1-</button>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default BtnP2;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport Nav from './Nav'\r\nimport Twitch from './Twitch'\r\nimport BtnP2 from './BtnP2'\r\nimport { Alert } from 'react-st-modal'\r\nimport IdleTimerContainer from './IdleTimer'\r\n\r\n\r\nconst MainP2 = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    //let countUser=0;\r\n    const [countUser, setCountUser] = useState(0)\r\n    //let checkUser = false;\r\n    const db = firebaseConfig.firestore();\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    let checkTotalUser;\r\n    const [count, setCount] = useState([])\r\n    function getCurrentUserOnWeb() {\r\n        db.collection('countuser').doc('onweb').onSnapshot(doc => {\r\n            const item = [];\r\n            item.push(doc.data())\r\n            setCount(item);\r\n            //alert(doc.data().p2team)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    function checkAnswered() {\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            const checkanswer1 = data.data().answerFirstQuestion\r\n            if (!checkanswer1) {\r\n                db.collection('user').doc(currentUser.uid).update({\r\n\r\n                    isOnline: false,\r\n                    isP1team: false,\r\n                    isP2team: false,\r\n        \r\n                }).then(() => {\r\n                    firebaseConfig.auth().signOut()\r\n                }).catch(error => {\r\n                    var errorMessage = error.message;\r\n                    alert(errorMessage, 'Error!');\r\n                    //alert(errorMessage);\r\n                })\r\n            }\r\n            else{\r\n                getCurrentUserOnWeb();\r\n                Alert(\"Welcome to Player 2 team!!!!!\", 'Welcome')\r\n            }\r\n        })\r\n           \r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            //setcheckUser(true);\r\n            checkAnswered();\r\n        }\r\n        window.onbeforeunload = confirmExit;\r\n\r\n        function confirmExit() {\r\n            db.collection('user').doc(currentUser.uid).update({\r\n\r\n                isOnline: false,\r\n                isP1team: false,\r\n                isP2team: false,\r\n\r\n            }).catch(error => {\r\n                var errorMessage = error.message;\r\n                alert(errorMessage, 'Error!');\r\n                //alert(errorMessage);\r\n            })\r\n        }\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isRunning) {\r\n            //alert(\"re\")\r\n            const id = window.setInterval(() => {\r\n                db.collection('user').doc(currentUser.uid).get().then(data => {\r\n                    const checkanswer1 = data.data().answerFirstQuestion\r\n                    const checkanswer2 = data.data().answerSecordQuestion\r\n                    setSeconds(seconds => seconds + 1)\r\n                    if (checkanswer1 && checkanswer2) {\r\n                        setIsRunning(isRunning => false)\r\n                        console.log(checkanswer1, checkanswer2)\r\n                        //console.log(\"isRunning:\"+isRunning)\r\n                    }\r\n                    else {\r\n\r\n\r\n                        setIsRunning(isRunning => false)\r\n                        window.location.href = \"/submit2\"\r\n                        // Сonfirmation confirmed\r\n\r\n\r\n                        //Alert(\"Please do the second questionnaire on this link:\" + \" https://www.surveymonkey.com/r/6KHX3TK.\", 'Please do a questionnaire');\r\n                        //window.location.href = \"/submit2\"\r\n                    }\r\n\r\n                    //console.log(\"isRunning:\"+isRunning)\r\n                })\r\n\r\n            }, 360000)\r\n            //console.log(\"isRunning:\"+isRunning)\r\n            return () => window.clearInterval(id);\r\n        }\r\n\r\n    }, [isRunning])\r\n\r\n\r\n\r\n    if (!currentUser) {\r\n        \r\n        \r\n        \r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    if (currentUser && checkUser) {\r\n        db.collection('user').doc(currentUser.uid).update({\r\n            isOnline: true,\r\n            isP2team: true,\r\n            isP1team: false\r\n\r\n        })\r\n        //setcheckLogout(false)\r\n        setcheckUser(false);\r\n        //alert(\"logout\")\r\n\r\n        //return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <Twitch />\r\n            <BtnP2 />\r\n            <IdleTimerContainer></IdleTimerContainer>\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MainP2;","import React, { useContext, useState } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\n\r\nconst LogIn = () => {\r\n    const [verified, checkVerify] = useState(false);\r\n    const [answerQuestion, checkAnswerQuestion] = useState(false);\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const db = firebaseConfig.firestore();\r\n    const [count, setCount] = useState([]);\r\n    let answer;\r\n    let countP1team = 0;\r\n    let countP2team = 0;\r\n    //checkVerify(false);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = e.target.elements;\r\n        try {\r\n            firebaseConfig.auth().signInWithEmailAndPassword(email.value, password.value).then(cred => {\r\n                if (cred.user.emailVerified) {\r\n                    checkVerify(true);\r\n                    db.collection('user').doc(cred.user.uid).get().then(data => {\r\n                        //console.log(data.data().answerFirstQuestion)\r\n                        checkAnswerQuestion(data.data().answerFirstQuestion);\r\n                        answer = data.data().answerFirstQuestion;\r\n                        //console.log(\"zxczxczxc \"+doc.data())\r\n                    }).then(() => {\r\n                        console.log(answer)\r\n                        if (answer) {\r\n                            db.collection('user').doc(cred.user.uid).update({\r\n                                isOnline: true\r\n                            }).then(() => {\r\n\r\n                                db.collection('user').get().then(data => {\r\n                                    const items = [];\r\n                                    data.forEach(doc => {\r\n                                        items.push(doc.data())\r\n                                        //console.log(\"zxczxczxc \"+doc.data())\r\n                                    });\r\n                                    console.log(items)\r\n                                    items.map(data => {\r\n                                        if (data.isOnline) {\r\n                                            //console.log(data.isP1team)\r\n                                            //console.log(data.isP2team)\r\n                                            if (data.isP1team === true) {\r\n                                                countP1team++;\r\n                                                setcheckUser(countP1team)\r\n                                                // console.log(\"p1 \" + checkUser)\r\n                                            }\r\n                                            if (data.isP2team === true) {\r\n                                                countP2team++;\r\n                                                setcheckUser(countP2team)\r\n                                                //console.log(\"p2 \" + checkUser)\r\n                                            }\r\n                                        }\r\n\r\n                                    })\r\n                                    ConditionToMain();\r\n                                    setCount(items);\r\n                                })\r\n                            })\r\n                        }\r\n                        else {\r\n                            window.location.href = \"/submit\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    //CustomDialog(<CustomDialogContent />, {title: 'Custom Dialog',showCloseIcon: true,})\r\n                    Alert(\"Please verify your email\", 'Verification');\r\n                    //alert(\"Please verify your email\");\r\n                    checkVerify(false);\r\n                }\r\n\r\n\r\n\r\n                //console.log(cred.user)\r\n            }).catch(error => {\r\n                var errorMessage = error.message;\r\n                Alert(errorMessage, 'Error!');\r\n                //alert(errorMessage);\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n            Alert(error, 'Error!');\r\n            //alert(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function ConditionToMain() {\r\n        if (countP1team - countP2team > 2) {\r\n            //alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP2\"\r\n        }\r\n        else if (countP2team - countP1team > 2) {\r\n            //alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP1\"\r\n        }\r\n        else {\r\n            function getRandomInt(min, max) {\r\n                min = Math.ceil(min);\r\n                max = Math.floor(max);\r\n                return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n            }\r\n            let random = getRandomInt(0, 2)\r\n\r\n            //alert(random)\r\n            if (random === 0) {\r\n               // Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n\r\n                window.location.href = \"/MainP1\"\r\n\r\n            }\r\n            else {\r\n                //alert(\"asdasda 1\")\r\n                //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n                window.location.href = \"/MainP2\"\r\n\r\n            }\r\n        }\r\n        db.collection('countuser').doc('onweb').update({\r\n\r\n            p1team: countP1team,\r\n            p2team: countP2team\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    //alert(verified);\r\n    if (currentUser && verified) {\r\n\r\n        //console.log(currentUser.displayName)\r\n        //alert(verified);\r\n        //checkVerify(false);\r\n        //getCurrentUserOnWeb();\r\n        //getCurrentUserOnWeb();\r\n        //alert(random)\r\n        /*return (\r\n\r\n\r\n            <Redirect to=\"/checkRandom\" />\r\n\r\n        )*/\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content bg-success text-center\">\r\n                <div className=\"col-md-4 text-center company__info\">\r\n                    <span className=\"company__logo\">\r\n                        <h2><span className=\"fa fa-android\"></span></h2>\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <h2>Log In</h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <form id=\"login-form\" onSubmit={handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <input type=\"text\" name=\"email\" id=\"email\" className=\"form__input\" placeholder=\"Email\"\r\n                                        required />\r\n                                </div>\r\n                                <div className=\"row\">\r\n\r\n                                    <input type=\"password\" name=\"password\" id=\"password\" className=\"form__input\"\r\n                                        placeholder=\"Password\" required />\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <button className=\"btnlogin btn-success\" type=\"submit\">Login</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <p>Don't have an account? <Link to=\"/signup\" >Register Here</Link></p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LogIn;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\nconst initPasscode = () => {\r\n    var generator = require('generate-password');\r\n    var password = generator.generate({\r\n        length: 10,\r\n        numbers: true\r\n    })\r\n    return password\r\n}\r\n\r\nconst CheckRandom = () => {\r\n\r\n\r\n\r\n    const [passcode, setPasscode] = useState(initPasscode)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n\r\n\r\n    const onSubmit = () => {\r\n\r\n        if(currentUser)\r\n        {\r\n            db.collection('passcode').doc(currentUser.uid).set({\r\n                passcode1: passcode\r\n    \r\n            }).then(()=>{\r\n                window.location.href = '/submit'\r\n            })\r\n        }\r\n        else if(!currentUser)\r\n        {\r\n            db.collection('passcode').doc(\"notuser\").set({\r\n                passcode1: passcode\r\n    \r\n            }).then(()=>{\r\n                Alert(\"Please login .......\",'Error')\r\n                window.location.href = '/login'\r\n            })\r\n        }\r\n        console.log(currentUser)\r\n        /*db.collection('passcode').doc('setPasscode').set({\r\n            passcode1: [passcode]\r\n\r\n        }).then(()=>{\r\n            //window.location.href = '/login'\r\n        })\r\n\r\n        //window.location.href = '/login'*/\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content text-center \">\r\n                <div className=\"col-md-12 col-xs-12 col-sm-12 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\"><h1>PASSCODE: {passcode}</h1></div>\r\n                        <div className=\"row\"><h2>Copy this passcode and back to submit page</h2></div>\r\n\r\n\r\n\r\n                        <button className=\"btnlogin btn-success\" onClick={onSubmit}>Back to submit</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default CheckRandom;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\nconst initPasscode = () => {\r\n    var generator = require('generate-password');\r\n    var password = generator.generate({\r\n        length: 10,\r\n        numbers: true\r\n    })\r\n    return password\r\n}\r\n\r\nconst CheckRandom2 = () => {\r\n\r\n\r\n\r\n    const [passcode, setPasscode] = useState(initPasscode)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n\r\n\r\n    const onSubmit = () => {\r\n\r\n        if(currentUser)\r\n        {\r\n            db.collection('passcode').doc(currentUser.uid).update({\r\n                passcode2: passcode\r\n    \r\n            }).then(()=>{\r\n                window.location.href = '/submit2'\r\n            })\r\n        }\r\n        else if(!currentUser)\r\n        {\r\n            db.collection('passcode').doc(\"notuser\").update({\r\n                passcode2: passcode\r\n    \r\n            }).then(()=>{\r\n                Alert(\"Please login .......\",'Error')\r\n                window.location.href = '/login'\r\n            })\r\n        }\r\n        console.log(currentUser)\r\n        /*db.collection('passcode').doc('setPasscode').set({\r\n            passcode1: [passcode]\r\n\r\n        }).then(()=>{\r\n            //window.location.href = '/login'\r\n        })\r\n\r\n        //window.location.href = '/login'*/\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content text-center \">\r\n                <div className=\"col-md-12 col-xs-12 col-sm-12 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\"><h1>PASSCODE: {passcode}</h1></div>\r\n                        <div className=\"row\"><h2>Copy this passcode and back to submit page</h2></div>\r\n\r\n\r\n\r\n                        <button className=\"btnlogin btn-success\" onClick={onSubmit}>Back to submit</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default CheckRandom2;","import React, { useState } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\n\r\nconst SignUp = () => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password, cPassword, display_Name } = e.target.elements;\r\n\r\n        try {\r\n            if (password.value === cPassword.value) {\r\n                firebaseConfig.auth().createUserWithEmailAndPassword(email.value, password.value).then(cred => {\r\n                    cred.user.updateProfile({\r\n                        displayName: display_Name.value\r\n                        \r\n                    })\r\n                    //console.log(Date())\r\n                    const db = firebaseConfig.firestore(); \r\n                    \r\n                    db.collection('user').doc(cred.user.uid).set({\r\n                        uID: cred.user.uid,\r\n                        displayName: display_Name.value, \r\n                        answerFirstQuestion: false,\r\n                        answerSecordQuestion: false,\r\n                        createdID: Date(),\r\n                        isOnline: false,\r\n                        isP1team: false,\r\n                        isP2team: false,\r\n                        countSendMessage : 0,\r\n                        countP1cheerBtn: 0,\r\n                        countP2cheerBtn: 0,\r\n                        countP1jeerBtn: 0,\r\n                        countP2jeerBtn: 0,\r\n                        countP1win: 0,\r\n                        countP2win: 0,\r\n                        \r\n                        \r\n                    })\r\n                    db.collection('leaderboard').doc(cred.user.uid).set({\r\n                        uID: cred.user.uid,\r\n                        displayName: display_Name.value, \r\n                        answerFirstQuestion: false,\r\n                        answerSecordQuestion: false,\r\n                        createdID: Date(),\r\n                        isOnline: false,\r\n                        isP1team: false,\r\n                        isP2team: false,\r\n                        countSendMessage : 0,\r\n                        countP1cheerBtn: 0,\r\n                        countP2cheerBtn: 0,\r\n                        countP1jeerBtn: 0,\r\n                        countP2jeerBtn: 0,\r\n                        countP1win: 0,\r\n                        countP2win: 0,\r\n                        \r\n                    })\r\n                    \r\n                    cred.user.sendEmailVerification();\r\n                    if (cred.user.emailVerified) {\r\n\r\n                    }\r\n                    else {\r\n                       \r\n                        Alert('Please verify your email', 'Verification');\r\n                    \r\n                        //alert(\"Please verify your email\");\r\n                        setCurrentUser(true);\r\n                    }\r\n                    //console.log(cred.user)\r\n\r\n                }).catch(error => {\r\n                    var errorMessage = error.message;\r\n                    Alert(errorMessage, 'Error!');\r\n                })\r\n                //firebaseConfig.auth().updateProfile(display_Name);\r\n                //firebaseConfig.firestore().collection('user').doc()\r\n\r\n            }\r\n            else {\r\n                Alert('Password confirmation does not match Password!!!!', 'Error!');\r\n                //alert(\"Password confirmation doesn't match Password!!!!\");\r\n            }\r\n\r\n        } catch (error) {\r\n            var errorMessage = error.message;\r\n\r\n            alert(errorMessage);\r\n        }\r\n    }\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row main-content bg-success text-center\">\r\n                    <div className=\"col-md-4 text-center company__info\">\r\n                        <span className=\"company__logo\">\r\n                            <h2><span className=\"fa fa-android\"></span></h2>\r\n                        </span>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <h2>Register</h2>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <form id=\"register_form\" onSubmit={handleSubmit}>\r\n                                    <div className=\"row\">\r\n                                        <input type=\"text\" name=\"email\" id=\"email\" className=\"form__input\" placeholder=\"Email\"\r\n                                            required />\r\n\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form__input\"\r\n                                            placeholder=\"Password\" required />\r\n\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <input type=\"password\" name=\"cPassword\" id=\"cPassword\" className=\"form__input\"\r\n                                            placeholder=\"Confirm Password\" required />\r\n\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <input type=\"text\" name=\"display_Name\" id=\"display_Name\" className=\"form__input\"\r\n                                            placeholder=\"Display Name\" required />\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <button className=\"btnlogin btn-success\" type=\"submit\">Register</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <p>Login? <Link to=\"/login\" >Login Here</Link></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\n\r\n\r\nconst SubmitPasscode = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const [count, setCount] = useState([]);\r\n    const [keepPasscode, setPasscode] = useState(null);\r\n    let countP1team = 0;\r\n    let countP2team = 0;\r\n\r\n    function ConditionToMain() {\r\n        if (countP1team - countP2team > 2) {\r\n            //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP2\"\r\n        }\r\n        else if (countP2team - countP1team > 2) {\r\n           // Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP1\"\r\n        }\r\n        else {\r\n            function getRandomInt(min, max) {\r\n                min = Math.ceil(min);\r\n                max = Math.floor(max);\r\n                return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n            }\r\n            let random = getRandomInt(0, 2)\r\n\r\n            //alert(random)\r\n            if (random === 0) {\r\n                //Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n\r\n                window.location.href = \"/MainP1\"\r\n\r\n            }\r\n            else {\r\n                //alert(\"asdasda 1\")\r\n                //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n                window.location.href = \"/MainP2\"\r\n\r\n            }\r\n        }\r\n        db.collection('countuser').doc('onweb').update({\r\n\r\n            p1team: countP1team,\r\n            p2team: countP2team\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { passcode } = e.target.elements;\r\n        db.collection('passcode').doc(currentUser.uid).get().then(data => {\r\n            console.log(passcode.value)\r\n\r\n            setPasscode(passcode.value);\r\n            if (passcode.value === data.data().passcode1) {\r\n                db.collection('user').doc(currentUser.uid).update({\r\n                    passcode1: passcode.value,\r\n                    submitData: Date(),\r\n                    answerFirstQuestion: true\r\n\r\n                }).then(() => {\r\n                    db.collection('user').doc(currentUser.uid).update({\r\n                        isOnline: true\r\n                    }).then(() => {\r\n\r\n                        db.collection('user').get().then(data => {\r\n                            const items = [];\r\n                            data.forEach(doc => {\r\n                                items.push(doc.data())\r\n                                //console.log(\"zxczxczxc \"+doc.data())\r\n                            });\r\n                            console.log(items)\r\n                            items.map(data => {\r\n                                if (data.isOnline) {\r\n                                    //console.log(data.isP1team)\r\n                                    //console.log(data.isP2team)\r\n                                    if (data.isP1team === true) {\r\n                                        countP1team++;\r\n                                        setcheckUser(countP1team)\r\n                                        // console.log(\"p1 \" + checkUser)\r\n                                    }\r\n                                    if (data.isP2team === true) {\r\n                                        countP2team++;\r\n                                        setcheckUser(countP2team)\r\n                                        //console.log(\"p2 \" + checkUser)\r\n                                    }\r\n                                }\r\n\r\n                            })\r\n                            ConditionToMain();\r\n                            setCount(items);\r\n                        })\r\n                    })\r\n                })\r\n                //console.log(data.data().passcode1)\r\n            } else {\r\n                Alert(\"Wrong passcode!!!!!!\", 'Error')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n\r\n            Alert(\"Please do the first questionnaire on this link:\" + \" https://jp.surveymonkey.com/r/RQ2MFYR. After that, please copy passcode from questionnaire and submit on this page\", 'Please do a questionnaire');\r\n            //alert(errorMessage);\r\n\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    if (!currentUser) {\r\n\r\n        //console.log(currentUser.displayName)\r\n        //alert(verified);\r\n        //checkVerify(false);\r\n        //getCurrentUserOnWeb();\r\n        //getCurrentUserOnWeb();\r\n        //alert(random)\r\n        return (\r\n\r\n\r\n            <Redirect to=\"/login\" />\r\n\r\n        )\r\n\r\n    }\r\n\r\n    function ForgotPasscode() {\r\n        console.log(\"asdasdasd\")\r\n        db.collection('passcode').doc(currentUser.uid).get().then(data =>{\r\n            //console.log(data.passcode1)\r\n            \r\n                Alert(data.data().passcode1, 'Your passcode')\r\n            \r\n            \r\n              \r\n            \r\n            \r\n        }).catch(error => {\r\n            \r\n            Alert(\"Please do a questionnaire!!!!!\", 'Error')\r\n        })\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content text-center \">\r\n                <div className=\"col-md-12 col-xs-12 col-sm-12 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <h2>Submit your passcode</h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <form id=\"login-form\" onSubmit={handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <input type=\"text\" name=\"passcode\" id=\"passcode\" className=\"form__input\" placeholder=\"Press your passcode here\"\r\n                                        required />\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <button className=\"btnlogin btn-success\" type=\"submit\">Submit</button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <p>Please do a questionnaire on this link: <a href=\"https://jp.surveymonkey.com/r/RQ2MFYR\">Click Here</a></p>\r\n                                    <p>After that, please copy passcode from questionnaire and submit on this page</p>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                            <p> <button className=\"btn btn-outline-dark\" onClick={ForgotPasscode}>Forgot a passcode</button></p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SubmitPasscode;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert, Confirm } from 'react-st-modal'\r\n\r\n\r\n\r\nconst SubmitPasscode2 = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const [count, setCount] = useState([]);\r\n    const [keepPasscode, setPasscode] = useState(null);\r\n    let countP1team = 0;\r\n    let countP2team = 0;\r\n\r\n    function ConditionToMain() {\r\n        if (countP1team - countP2team > 2) {\r\n            //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP2\"\r\n        }\r\n        else if (countP2team - countP1team > 2) {\r\n            // Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP1\"\r\n        }\r\n        else {\r\n            function getRandomInt(min, max) {\r\n                min = Math.ceil(min);\r\n                max = Math.floor(max);\r\n                return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n            }\r\n            let random = getRandomInt(0, 2)\r\n\r\n            //alert(random)\r\n            if (random === 0) {\r\n                //Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n\r\n                window.location.href = \"/MainP1\"\r\n\r\n            }\r\n            else {\r\n                //alert(\"asdasda 1\")\r\n                //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n                window.location.href = \"/MainP2\"\r\n\r\n            }\r\n        }\r\n        db.collection('countuser').doc('onweb').update({\r\n\r\n            p1team: countP1team,\r\n            p2team: countP2team\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { passcode } = e.target.elements;\r\n        db.collection('passcode').doc(currentUser.uid).get().then(data => {\r\n            console.log(passcode.value)\r\n\r\n            setPasscode(passcode.value);\r\n            if (passcode.value === data.data().passcode2) {\r\n                db.collection('user').doc(currentUser.uid).update({\r\n                    passcode2: passcode.value,\r\n                    submitData2: Date(),\r\n\r\n\r\n                }).then(() => {\r\n                    db.collection('user').doc(currentUser.uid).get().then(data => {\r\n                        const date1 = new Date(data.data().submitData).getTime();\r\n                        const date2 = new Date(data.data().submitData2).getTime();\r\n                        function getDifferenceInMinutes(date1, date2) {\r\n                            const diffInMs = Math.abs(date2 - date1);\r\n                            return diffInMs / (1000 * 60);\r\n                        }\r\n\r\n                        let diff = getDifferenceInMinutes(date1, date2)\r\n                        console.log(diff)\r\n                        if (diff <= 10) {\r\n                            db.collection('user').doc(currentUser.uid).update({\r\n                                passcode2: passcode.value,\r\n                                answerSecordQuestion: true,\r\n\r\n\r\n\r\n                            }).then(() => {\r\n\r\n                                db.collection('user').doc(currentUser.uid).update({\r\n                                    isOnline: true\r\n                                }).then(() => {\r\n\r\n                                    db.collection('user').get().then(data => {\r\n                                        const items = [];\r\n                                        data.forEach(doc => {\r\n                                            items.push(doc.data())\r\n                                            //console.log(\"zxczxczxc \"+doc.data())\r\n                                        });\r\n                                        console.log(items)\r\n                                        items.map(data => {\r\n                                            if (data.isOnline) {\r\n                                                //console.log(data.isP1team)\r\n                                                //console.log(data.isP2team)\r\n                                                if (data.isP1team === true) {\r\n                                                    countP1team++;\r\n                                                    setcheckUser(countP1team)\r\n                                                    // console.log(\"p1 \" + checkUser)\r\n                                                }\r\n                                                if (data.isP2team === true) {\r\n                                                    countP2team++;\r\n                                                    setcheckUser(countP2team)\r\n                                                    //console.log(\"p2 \" + checkUser)\r\n                                                }\r\n                                            }\r\n\r\n                                        })\r\n                                        ConditionToMain();\r\n                                        setCount(items);\r\n                                    })\r\n                                })\r\n\r\n\r\n                            })\r\n                        }\r\n                        else {\r\n                            db.collection('user').doc(currentUser.uid).update({\r\n                                passcode2: \"\",\r\n                                answerFirstQuestion: false,\r\n                                answerSecordQuestion: false,\r\n                                passcode1: \"\",\r\n\r\n\r\n                            }).then(async () => {\r\n                                const result = await Alert('You have been taking the questionnaire for too long. Please complete the first questionnaire and the second questionnaire again.',\r\n                                    'Error');\r\n\r\n\r\n                                // Сonfirmation confirmed\r\n                                //console.log(\"asdasdasdasd\")\r\n\r\n                            }).then(() => {\r\n                                db.collection('passcode').doc(currentUser.uid).update({\r\n                                    passcode2: \"\",\r\n                                    passcode1: \"\",\r\n                                }).then(() => {\r\n                                    firebaseConfig.auth().signOut()\r\n                                    //window.location.href = \"/login\"\r\n                                })\r\n\r\n                            })\r\n                        }\r\n\r\n                    })\r\n\r\n\r\n                })\r\n                //console.log(data.data().passcode1)\r\n            } else {\r\n                Alert(\"Wrong passcode!!!!!!\", 'Error')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n\r\n            Alert(\"Please do the second questionnaire on this link: https://jp.surveymonkey.com/r/RQQ7D6B. After that, please copy passcode from questionnaire and submit on this page\", 'Please do the second questionnaire');\r\n            //alert(errorMessage);\r\n\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    if (!currentUser) {\r\n\r\n        //console.log(currentUser.displayName)\r\n        //alert(verified);\r\n        //checkVerify(false);\r\n        //getCurrentUserOnWeb();\r\n        //getCurrentUserOnWeb();\r\n        //alert(random)\r\n        return (\r\n\r\n\r\n            <Redirect to=\"/login\" />\r\n\r\n        )\r\n\r\n    }\r\n\r\n    function ForgotPasscode() {\r\n        //console.log(\"asdasdasd\")\r\n        db.collection('passcode').doc(currentUser.uid).get().then(data => {\r\n            //console.log(data.passcode1)\r\n            if (data.data().passcode2) {\r\n                Alert(data.data().passcode2, 'Your passcode')\r\n            }\r\n            else {\r\n                Alert(\"Please do a questionnaire!!!!!\", 'Error')\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }).catch(error => {\r\n\r\n            Alert(\"Please do a questionnaire!!!!!\", 'Error')\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content text-center \">\r\n                <div className=\"col-md-12 col-xs-12 col-sm-12 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <h2>Submit your passcode</h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <form id=\"login-form\" onSubmit={handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <input type=\"text\" name=\"passcode\" id=\"passcode\" className=\"form__input\" placeholder=\"Press your passcode here\"\r\n                                        required />\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <button className=\"btnlogin btn-success\" type=\"submit\">Submit</button>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <p>Please do the second questionnaire on this link: <a href=\"https://jp.surveymonkey.com/r/RQQ7D6B\">Click Here</a></p>\r\n                                    <p>After that, please copy passcode from questionnaire and submit on this page</p>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                            <p> <button className=\"btn btn-outline-dark\" onClick={ForgotPasscode}>Forgot a passcode</button></p>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SubmitPasscode2;","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport MainP1 from './components/MainP1'\nimport MainP2 from './components/MainP2'\nimport LogIn from './components/LogIn'\nimport CheckRandom from './components/CheckRandom'\nimport CheckRandom2 from './components/CheckRandom2'\nimport SignUp from './components/SignUp'\nimport SubmitPasscode from './components/SubmitPasscode'\nimport SubmitPasscode2 from './components/SubmitPasscode2'\nimport {AuthProvider} from './components/auth'\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LogIn}/>\n          <Route path='/login' component={LogIn}/>\n          <Route path='/signup' component={SignUp}/>\n          <Route path='/mainP1' component={MainP1}/>\n          <Route path='/mainP2' component={MainP2}/>\n          <Route path='/passcode' component={CheckRandom}/>\n          <Route path='/passcode2' component={CheckRandom2}/>\n          <Route path='/submit' component={SubmitPasscode}/>\n          <Route path='/submit2' component={SubmitPasscode2}/>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}