{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hobbies\\\\apg-interface\\\\src\\\\components\\\\CheckRandom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebaseConfig from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckRandom = () => {\n  _s();\n\n  const db = firebaseConfig.firestore();\n\n  function getCurrentUserOnWeb() {\n    db.collection('countuser').doc('onweb').onSnapshot(doc => {\n      if (doc.data().p1team - doc.data().p2team > 2) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/mainP2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this);\n      } else if (doc.data().p2team - doc.data().p1team > 2) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/mainP1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this);\n      } else {\n        function getRandomInt(min, max) {\n          min = Math.ceil(min);\n          max = Math.floor(max);\n          return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n        }\n\n        let random = getRandomInt(0, 2); //alert(random)\n\n        if (random === 0) {\n          alert(\"asdasda 0\");\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/mainP1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this);\n        } else {\n          alert(\"asdasda 1\");\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/mainP2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this);\n        }\n      }\n    });\n  }\n\n  useEffect(() => {\n    getCurrentUserOnWeb();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckRandom, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CheckRandom;\nexport default CheckRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRandom\");","map":{"version":3,"sources":["D:/Hobbies/apg-interface/src/components/CheckRandom.js"],"names":["React","useContext","useState","useEffect","Redirect","firebaseConfig","CheckRandom","db","firestore","getCurrentUserOnWeb","collection","doc","onSnapshot","data","p1team","p2team","getRandomInt","min","max","Math","ceil","floor","random","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,WAA3B;;;AAGA,MAAOC,WAAW,GAAG,MAAK;AAAA;;AACtB,QAAMC,EAAE,GAAGF,cAAc,CAACG,SAAf,EAAX;;AACA,WAASC,mBAAT,GAA+B;AAC3BF,IAAAA,EAAE,CAACG,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+B,OAA/B,EAAwCC,UAAxC,CAAmDD,GAAG,IAAI;AACtD,UAAGA,GAAG,CAACE,IAAJ,GAAWC,MAAX,GAAoBH,GAAG,CAACE,IAAJ,GAAWE,MAA/B,GAAwC,CAA3C,EACA;AACI,4BAEI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAIH,OAND,MAOK,IAAGJ,GAAG,CAACE,IAAJ,GAAWE,MAAX,GAAoBJ,GAAG,CAACE,IAAJ,GAAWC,MAA/B,GAAwC,CAA3C,EAA6C;AAC9C,4BAEI,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAIH,OALI,MAMD;AACA,iBAASE,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5BD,UAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,UAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,iBAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP,CAH4B,CAG0B;AACvD;;AACH,YAAIK,MAAM,GAAGN,YAAY,CAAC,CAAD,EAAG,CAAH,CAAzB,CANA,CAQA;;AACA,YAAGM,MAAM,KAAK,CAAd,EAAgB;AACZC,UAAAA,KAAK,CAAC,WAAD,CAAL;AACA,8BAEI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAIH,SAND,MAOI;AACAA,UAAAA,KAAK,CAAC,WAAD,CAAL;AACA,8BAEI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAIH;AACJ;AAEJ,KAvCD;AAyCH;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,mBAAmB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CArDD;;GAAOH,W;;KAAAA,W;AAuDP,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport firebaseConfig from '../config'\r\n\r\n\r\nconst  CheckRandom = () =>{\r\n    const db = firebaseConfig.firestore();\r\n    function getCurrentUserOnWeb() {\r\n        db.collection('countuser').doc('onweb').onSnapshot(doc => {\r\n            if(doc.data().p1team - doc.data().p2team > 2 )\r\n            {\r\n                return(\r\n            \r\n                    <Redirect to=\"/mainP2\" />\r\n                ) \r\n            }\r\n            else if(doc.data().p2team - doc.data().p1team > 2){\r\n                return(\r\n            \r\n                    <Redirect to=\"/mainP1\" />\r\n                ) \r\n            }\r\n            else{\r\n                function getRandomInt(min, max) {\r\n                    min = Math.ceil(min);\r\n                    max = Math.floor(max);\r\n                    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n                  }\r\n                let random = getRandomInt(0,2) \r\n\r\n                //alert(random)\r\n                if(random === 0){\r\n                    alert(\"asdasda 0\")\r\n                    return(\r\n                        \r\n                        <Redirect to=\"/mainP1\" />\r\n                    ) \r\n                }\r\n                else{\r\n                    alert(\"asdasda 1\")\r\n                    return(\r\n            \r\n                        <Redirect to=\"/mainP2\" />\r\n                    ) \r\n                }\r\n            }\r\n            \r\n        })\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getCurrentUserOnWeb();\r\n    }, [])\r\n\r\n    return(\r\n        <p>Loading...</p>\r\n    )\r\n}\r\n\r\nexport default CheckRandom;"]},"metadata":{},"sourceType":"module"}