{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hobbies\\\\apg-interface\\\\src\\\\components\\\\CheckRandom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from './auth';\nimport firebaseConfig from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckRandom = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const db = firebaseConfig.firestore();\n  const [count, setCount] = useState([]);\n  const [checkUser, setcheckUser] = useState(true);\n  let countP1team = 0;\n  let countP2team = 0;\n\n  const getCurrentUserOnWeb = () => {\n    db.collection('user').get().then(data => {\n      const items = [];\n      data.forEach(doc => {\n        items.push(doc.data());\n      });\n      setCount(items);\n      console.log(count);\n    }).then(() => {\n      count.map(data => {\n        if (data.isOnline) {\n          console.log(data.isP1team);\n          console.log(data.isP2team);\n\n          if (data.isP1team === true) {\n            countP1team++;\n            setcheckUser(countP1team);\n            console.log(\"p1 \" + checkUser);\n          }\n\n          if (data.isP2team === true) {\n            countP2team++;\n            setcheckUser(countP2team);\n            console.log(\"p2 \" + checkUser);\n          }\n        }\n      });\n      ConditionToMain(); //console.log(data.data().countSendMessage)\n      //alert(countMessage)\n    }); //alert(\"asdasdasdasdasdasd\");\n\n    /*db.collection('user').onSnapshot(snapshot => {\r\n        const items = [];\r\n        snapshot.forEach(doc => {\r\n            items.push(doc.data())\r\n        });\r\n        setCount(items);\r\n        count.map(data => {\r\n            if (data.isOnline) {\r\n                console.log(data.isP1team)\r\n                console.log(data.isP2team)\r\n                if (data.isP1team === true) {\r\n                    countP1team++;\r\n                    console.log(\"p1 \" + countP1team)\r\n                }\r\n                if (data.isP2team === true) {\r\n                    countP2team++;\r\n                    console.log(\"p2 \" + countP2team)\r\n                }\r\n            }\r\n        })\r\n        console.log(\"884884488\")\r\n        ConditionToMain();\r\n        //\r\n      })\r\n      //ConditionToMain();*/\n  };\n  /*count.map(data => {\r\n      if (data.isOnline) {\r\n          //console.log(data.isP1team)\r\n          if (data.isP1team) {\r\n              countP1team++;\r\n              //alert(\"p1 \"+countP1team)\r\n          }\r\n          else if (data.isP2team) {\r\n              countP2team++;\r\n          }\r\n      }\r\n  })*/\n\n\n  function ConditionToMain() {\n    if (countP1team - countP2team > 0) {\n      console.log(\"countP1team:\" + countP1team); //window.location.href = \"/MainP2\"\n    } else if (countP2team - countP1team > 0) {\n      console.log(\"countP2team:\" + countP2team);\n      window.location.href = \"/MainP1\";\n    } else {\n      function getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n      }\n\n      let random = getRandomInt(0, 2); //alert(random)\n\n      if (random === 0) {\n        console.log(\"countP1team: \" + countP1team + \"countP2team: \" + countP2team); //window.location.href = \"/MainP1\"\n      } else {\n        //alert(\"asdasda 1\")\n        console.log(\"countP1team: \" + countP1team + \"countP2team: \" + countP2team); //window.location.href = \"/MainP2\"\n      }\n    }\n  }\n\n  useEffect(() => {\n    //getCurrentUserOnWeb();\n\n    /*count.map(data => {\r\n    if (data.isOnline) {\r\n        //console.log(data.isP1team)\r\n        if (data.isP1team) {\r\n            countP1team++;\r\n            //alert(\"p1 \"+countP1team)\r\n        }\r\n        else if (data.isP2team) {\r\n            countP2team++;\r\n        }\r\n    }\r\n    })*/\n    //ConditionToMain();\n    db.collection('user').get().then(data => {\n      const items = [];\n      data.forEach(doc => {\n        items.push(doc.data());\n      });\n      setCount(items);\n      console.log(count);\n    }).then(() => {\n      count.map(data => {\n        if (data.isOnline) {\n          console.log(data.isP1team);\n          console.log(data.isP2team);\n\n          if (data.isP1team === true) {\n            countP1team++;\n            setcheckUser(countP1team);\n            console.log(\"p1 \" + checkUser);\n          }\n\n          if (data.isP2team === true) {\n            countP2team++;\n            setcheckUser(countP2team);\n            console.log(\"p2 \" + checkUser);\n          }\n        }\n      });\n      ConditionToMain(); //console.log(data.data().countSendMessage)\n      //alert(countMessage)\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckRandom, \"b7/52tUJVEvZH05/NVAB/0U9e4I=\");\n\n_c = CheckRandom;\nexport default CheckRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRandom\");","map":{"version":3,"sources":["D:/Hobbies/apg-interface/src/components/CheckRandom.js"],"names":["React","useContext","useState","useEffect","Redirect","AuthContext","firebaseConfig","CheckRandom","currentUser","db","firestore","count","setCount","checkUser","setcheckUser","countP1team","countP2team","getCurrentUserOnWeb","collection","get","then","data","items","forEach","doc","push","console","log","map","isOnline","isP1team","isP2team","ConditionToMain","window","location","href","getRandomInt","min","max","Math","ceil","floor","random"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\n\r\n\r\nconst CheckRandom = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n    const [count, setCount] = useState([]);\r\n    const [checkUser, setcheckUser] = useState(true);\r\n\r\n    let countP1team = 0;\r\n    let countP2team = 0;\r\n    \r\n\r\n\r\n    const getCurrentUserOnWeb= ()=> {\r\n        db.collection('user').get().then(data => {\r\n            const items = [];\r\n            data.forEach(doc => {\r\n                items.push(doc.data())\r\n            });\r\n            setCount(items);\r\n            console.log(count)\r\n            \r\n            \r\n        }).then(() => {\r\n            count.map(data => {\r\n                if (data.isOnline) {\r\n                    console.log(data.isP1team)\r\n                    console.log(data.isP2team)\r\n                    if (data.isP1team === true) {\r\n                        countP1team++;\r\n                        setcheckUser(countP1team)\r\n                        console.log(\"p1 \" + checkUser)\r\n                    }\r\n                    if (data.isP2team === true) {\r\n                        countP2team++;\r\n                        setcheckUser(countP2team)\r\n                        console.log(\"p2 \" + checkUser)\r\n                    }\r\n                }\r\n            })\r\n            ConditionToMain();\r\n            //console.log(data.data().countSendMessage)\r\n            //alert(countMessage)\r\n            \r\n        })\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        //alert(\"asdasdasdasdasdasd\");\r\n        /*db.collection('user').onSnapshot(snapshot => {\r\n            const items = [];\r\n            snapshot.forEach(doc => {\r\n                items.push(doc.data())\r\n            });\r\n            setCount(items);\r\n            count.map(data => {\r\n                if (data.isOnline) {\r\n                    console.log(data.isP1team)\r\n                    console.log(data.isP2team)\r\n                    if (data.isP1team === true) {\r\n                        countP1team++;\r\n                        console.log(\"p1 \" + countP1team)\r\n                    }\r\n                    if (data.isP2team === true) {\r\n                        countP2team++;\r\n                        console.log(\"p2 \" + countP2team)\r\n                    }\r\n                }\r\n            })\r\n            console.log(\"884884488\")\r\n            ConditionToMain();\r\n            //\r\n\r\n        })\r\n\r\n        //ConditionToMain();*/\r\n    }\r\n\r\n    /*count.map(data => {\r\n        if (data.isOnline) {\r\n            //console.log(data.isP1team)\r\n            if (data.isP1team) {\r\n                countP1team++;\r\n                //alert(\"p1 \"+countP1team)\r\n            }\r\n            else if (data.isP2team) {\r\n                countP2team++;\r\n            }\r\n        }\r\n    })*/\r\n\r\n    function ConditionToMain() {\r\n        if (countP1team - countP2team > 0) {\r\n            console.log(\"countP1team:\" + countP1team)\r\n            //window.location.href = \"/MainP2\"\r\n        }\r\n        else if (countP2team - countP1team > 0) {\r\n            console.log(\"countP2team:\" + countP2team)\r\n            window.location.href = \"/MainP1\"\r\n        }\r\n        else {\r\n            function getRandomInt(min, max) {\r\n                min = Math.ceil(min);\r\n                max = Math.floor(max);\r\n                return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n            }\r\n            let random = getRandomInt(0, 2)\r\n\r\n            //alert(random)\r\n            if (random === 0) {\r\n                console.log(\"countP1team: \" + countP1team + \"countP2team: \" + countP2team)\r\n\r\n\r\n                //window.location.href = \"/MainP1\"\r\n\r\n            }\r\n            else {\r\n                //alert(\"asdasda 1\")\r\n                console.log(\"countP1team: \" + countP1team + \"countP2team: \" + countP2team)\r\n\r\n                //window.location.href = \"/MainP2\"\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        //getCurrentUserOnWeb();\r\n        /*count.map(data => {\r\n        if (data.isOnline) {\r\n            //console.log(data.isP1team)\r\n            if (data.isP1team) {\r\n                countP1team++;\r\n                //alert(\"p1 \"+countP1team)\r\n            }\r\n            else if (data.isP2team) {\r\n                countP2team++;\r\n            }\r\n        }\r\n    })*/\r\n\r\n        //ConditionToMain();\r\n\r\n        db.collection('user').get().then(data => {\r\n            const items = [];\r\n            data.forEach(doc => {\r\n                items.push(doc.data())\r\n            });\r\n            setCount(items);\r\n            console.log(count)\r\n            \r\n            \r\n        }).then(() => {\r\n            count.map(data => {\r\n                if (data.isOnline) {\r\n                    console.log(data.isP1team)\r\n                    console.log(data.isP2team)\r\n                    if (data.isP1team === true) {\r\n                        countP1team++;\r\n                        setcheckUser(countP1team)\r\n                        console.log(\"p1 \" + checkUser)\r\n                    }\r\n                    if (data.isP2team === true) {\r\n                        countP2team++;\r\n                        setcheckUser(countP2team)\r\n                        console.log(\"p2 \" + checkUser)\r\n                    }\r\n                }\r\n            })\r\n            ConditionToMain();\r\n            //console.log(data.data().countSendMessage)\r\n            //alert(countMessage)\r\n            \r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <p>Loading...</p>\r\n    )\r\n}\r\n\r\nexport default CheckRandom;"]},"metadata":{},"sourceType":"module"}