{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hobbies\\\\apg-interface\\\\src\\\\components\\\\CheckRandom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from './auth';\nimport firebaseConfig from '../config';\nimport { Alert } from 'react-st-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst initPasscode = () => {\n  var generator = require('generate-password');\n\n  var password = generator.generate({\n    length: 10,\n    numbers: true\n  });\n  return password;\n};\n\nconst CheckRandom = () => {\n  _s();\n\n  const [passcode, setPasscode] = useState(initPasscode);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const db = firebaseConfig.firestore();\n\n  const onSubmit = () => {\n    if (currentUser) {\n      db.collection('passcode').doc(currentUser.uid).set({\n        passcode1: passcode\n      }).then(() => {//window.location.href = '/login'\n      });\n    } else if (!currentUser) {\n      db.collection('passcode').doc(\"notuser\").set({\n        passcode1: passcode\n      }).then(() => {\n        Alert(\"Please login .......\", 'Error'); //window.location.href = '/login'\n      });\n    }\n\n    console.log(currentUser);\n    /*db.collection('passcode').doc('setPasscode').set({\r\n        passcode1: [passcode]\r\n      }).then(()=>{\r\n        //window.location.href = '/login'\r\n    })\r\n      //window.location.href = '/login'*/\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row main-content text-center \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 col-xs-12 col-sm-12 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"PASSCODE: \", passcode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Copy this passcode and back to login page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnlogin btn-success\",\n            onClick: onSubmit,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckRandom, \"9sd2j2x+3zNWvh/tWqTIQYo5MuQ=\");\n\n_c = CheckRandom;\nexport default CheckRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRandom\");","map":{"version":3,"sources":["D:/Hobbies/apg-interface/src/components/CheckRandom.js"],"names":["React","useContext","useState","useEffect","Redirect","AuthContext","firebaseConfig","Alert","initPasscode","generator","require","password","generate","length","numbers","CheckRandom","passcode","setPasscode","currentUser","db","firestore","onSubmit","collection","doc","uid","set","passcode1","then","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,MAAIC,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AACA,MAAIC,QAAQ,GAAGF,SAAS,CAACG,QAAV,CAAmB;AAC9BC,IAAAA,MAAM,EAAE,EADsB;AAE9BC,IAAAA,OAAO,EAAE;AAFqB,GAAnB,CAAf;AAIA,SAAOH,QAAP;AACH,CAPD;;AASA,MAAMI,WAAW,GAAG,MAAM;AAAA;;AAItB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACM,YAAD,CAAxC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAkBjB,UAAU,CAACI,WAAD,CAAlC;AACA,QAAMc,EAAE,GAAGb,cAAc,CAACc,SAAf,EAAX;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AAEnB,QAAGH,WAAH,EACA;AACIC,MAAAA,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BL,WAAW,CAACM,GAA1C,EAA+CC,GAA/C,CAAmD;AAC/CC,QAAAA,SAAS,EAAEV;AADoC,OAAnD,EAGGW,IAHH,CAGQ,MAAI,CACR;AACH,OALD;AAMH,KARD,MASK,IAAG,CAACT,WAAJ,EACL;AACIC,MAAAA,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8B,SAA9B,EAAyCE,GAAzC,CAA6C;AACzCC,QAAAA,SAAS,EAAEV;AAD8B,OAA7C,EAGGW,IAHH,CAGQ,MAAI;AACRpB,QAAAA,KAAK,CAAC,sBAAD,EAAwB,OAAxB,CAAL,CADQ,CAER;AACH,OAND;AAOH;;AACDqB,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACA;AACR;AACA;AACA;AACA;AACA;AAKK,GAhCD;;AAmCAf,EAAAA,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGN,EAHM,CAAT;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCAAqB;AAAA,uCAAea,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAQ,YAAA,SAAS,EAAC,sBAAlB;AAAyC,YAAA,OAAO,EAAEK,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH,CA1ED;;GAAMN,W;;KAAAA,W;AA4EN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\nconst initPasscode = () => {\r\n    var generator = require('generate-password');\r\n    var password = generator.generate({\r\n        length: 10,\r\n        numbers: true\r\n    })\r\n    return password\r\n}\r\n\r\nconst CheckRandom = () => {\r\n\r\n\r\n\r\n    const [passcode, setPasscode] = useState(initPasscode)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n\r\n\r\n    const onSubmit = () => {\r\n\r\n        if(currentUser)\r\n        {\r\n            db.collection('passcode').doc(currentUser.uid).set({\r\n                passcode1: passcode\r\n    \r\n            }).then(()=>{\r\n                //window.location.href = '/login'\r\n            })\r\n        }\r\n        else if(!currentUser)\r\n        {\r\n            db.collection('passcode').doc(\"notuser\").set({\r\n                passcode1: passcode\r\n    \r\n            }).then(()=>{\r\n                Alert(\"Please login .......\",'Error')\r\n                //window.location.href = '/login'\r\n            })\r\n        }\r\n        console.log(currentUser)\r\n        /*db.collection('passcode').doc('setPasscode').set({\r\n            passcode1: [passcode]\r\n\r\n        }).then(()=>{\r\n            //window.location.href = '/login'\r\n        })\r\n\r\n        //window.location.href = '/login'*/\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content text-center \">\r\n                <div className=\"col-md-12 col-xs-12 col-sm-12 \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\"><h1>PASSCODE: {passcode}</h1></div>\r\n                        <div className=\"row\"><h2>Copy this passcode and back to login page</h2></div>\r\n\r\n\r\n\r\n                        <button className=\"btnlogin btn-success\" onClick={onSubmit}>Login</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default CheckRandom;"]},"metadata":{},"sourceType":"module"}