{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from './auth';\nimport firebaseConfig from '../config';\nimport { Alert } from 'react-st-modal';\n\nfunction RandomTeam() {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const db = firebaseConfig.firestore();\n  const [checkUser, setcheckUser] = useState(true);\n  const [count, setCount] = useState([]);\n  const [keepPasscode, setPasscode] = useState(null);\n  let countP1team = 0;\n  let countP2team = 0;\n\n  function ConditionToMain() {\n    if (countP1team - countP2team > 2) {\n      //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\n      window.location.href = \"/MainP2\";\n    } else if (countP2team - countP1team > 2) {\n      // Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\n      window.location.href = \"/MainP1\";\n    } else {\n      function getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n      }\n\n      let random = getRandomInt(0, 2); //alert(random)\n\n      if (random === 0) {\n        //Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\n        window.location.href = \"/MainP1\";\n      } else {\n        //alert(\"asdasda 1\")\n        //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\n        window.location.href = \"/MainP2\";\n      }\n    }\n\n    db.collection('countuser').doc('onweb').update({\n      p1team: countP1team,\n      p2team: countP2team\n    });\n  }\n\n  db.collection('user').doc(currentUser.uid).update({\n    isOnline: true\n  }).then(() => {\n    db.collection('user').get().then(data => {\n      const items = [];\n      data.forEach(doc => {\n        items.push(doc.data()); //console.log(\"zxczxczxc \"+doc.data())\n      });\n      console.log(items);\n      items.map(data => {\n        if (data.isOnline) {\n          //console.log(data.isP1team)\n          //console.log(data.isP2team)\n          if (data.isP1team === true) {\n            countP1team++;\n            setcheckUser(countP1team); // console.log(\"p1 \" + checkUser)\n          }\n\n          if (data.isP2team === true) {\n            countP2team++;\n            setcheckUser(countP2team); //console.log(\"p2 \" + checkUser)\n          }\n        }\n      });\n      ConditionToMain();\n      setCount(items);\n    });\n  });\n}\n\n_s(RandomTeam, \"YvaRo7v2FIXQmk7niHnSEp8CzaU=\");\n\n_c = RandomTeam;\nexport default RandomTeam;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomTeam\");","map":{"version":3,"sources":["D:/Hobbies/apg-interface/src/components/RandomTeam.js"],"names":["React","useContext","useState","useEffect","Redirect","AuthContext","firebaseConfig","Alert","RandomTeam","currentUser","db","firestore","checkUser","setcheckUser","count","setCount","keepPasscode","setPasscode","countP1team","countP2team","ConditionToMain","window","location","href","getRandomInt","min","max","Math","ceil","floor","random","collection","doc","update","p1team","p2team","uid","isOnline","then","get","data","items","forEach","push","console","log","map","isP1team","isP2team"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert } from 'react-st-modal'\r\n\r\nfunction RandomTeam() {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const db = firebaseConfig.firestore();\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const [count, setCount] = useState([]);\r\n    const [keepPasscode, setPasscode] = useState(null);\r\n    let countP1team = 0;\r\n    let countP2team = 0;\r\n\r\n    function ConditionToMain() {\r\n        if (countP1team - countP2team > 2) {\r\n            //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP2\"\r\n        }\r\n        else if (countP2team - countP1team > 2) {\r\n            // Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n            window.location.href = \"/MainP1\"\r\n        }\r\n        else {\r\n            function getRandomInt(min, max) {\r\n                min = Math.ceil(min);\r\n                max = Math.floor(max);\r\n                return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n            }\r\n            let random = getRandomInt(0, 2)\r\n\r\n            //alert(random)\r\n            if (random === 0) {\r\n                //Alert(\"Welcome to Player 1 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n\r\n                window.location.href = \"/MainP1\"\r\n\r\n            }\r\n            else {\r\n                //alert(\"asdasda 1\")\r\n                //Alert(\"Welcome to Player 2 team, now there are \"+countP1team+\" players on a team of 1 player and there are \"+countP2team+\" players on a 2 player team.\")\r\n\r\n                window.location.href = \"/MainP2\"\r\n\r\n            }\r\n        }\r\n        db.collection('countuser').doc('onweb').update({\r\n\r\n            p1team: countP1team,\r\n            p2team: countP2team\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    db.collection('user').doc(currentUser.uid).update({\r\n        isOnline: true\r\n    }).then(() => {\r\n\r\n        db.collection('user').get().then(data => {\r\n            const items = [];\r\n            data.forEach(doc => {\r\n                items.push(doc.data())\r\n                //console.log(\"zxczxczxc \"+doc.data())\r\n            });\r\n            console.log(items)\r\n            items.map(data => {\r\n                if (data.isOnline) {\r\n                    //console.log(data.isP1team)\r\n                    //console.log(data.isP2team)\r\n                    if (data.isP1team === true) {\r\n                        countP1team++;\r\n                        setcheckUser(countP1team)\r\n                        // console.log(\"p1 \" + checkUser)\r\n                    }\r\n                    if (data.isP2team === true) {\r\n                        countP2team++;\r\n                        setcheckUser(countP2team)\r\n                        //console.log(\"p2 \" + checkUser)\r\n                    }\r\n                }\r\n\r\n            })\r\n            ConditionToMain();\r\n            setCount(items);\r\n        })\r\n    })\r\n\r\n\r\n\r\n}\r\n\r\nexport default RandomTeam;"]},"metadata":{},"sourceType":"module"}