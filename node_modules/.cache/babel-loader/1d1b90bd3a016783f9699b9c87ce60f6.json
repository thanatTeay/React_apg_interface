{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hobbies\\\\apg-interface\\\\src\\\\components\\\\LogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { AuthContext } from './auth';\nimport firebaseConfig from '../config';\nimport { Alert, Prompt } from 'react-st-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogIn = () => {\n  _s();\n\n  const [verified, checkVerify] = useState(false);\n  const [answerQuestion, checkAnswerQuestion] = useState(false);\n  const [checkUser, setcheckUser] = useState(true);\n  const db = firebaseConfig.firestore();\n  const [count, setCount] = useState([]);\n  let answer;\n  let countP1team = 0;\n  let countP2team = 0; //checkVerify(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = e.target.elements;\n\n    try {\n      firebaseConfig.auth().signInWithEmailAndPassword(email.value, password.value).then(cred => {\n        if (cred.user.emailVerified) {\n          checkVerify(true);\n          db.collection('user').doc(cred.user.uid).get().then(data => {\n            //console.log(data.data().answerFirstQuestion)\n            checkAnswerQuestion(data.data().answerFirstQuestion);\n            answer = data.data().answerFirstQuestion; //console.log(\"zxczxczxc \"+doc.data())\n          }).then(() => {\n            console.log(answer);\n\n            if (answer) {\n              db.collection('user').doc(cred.user.uid).update({\n                isOnline: true\n              }).then(() => {\n                db.collection('user').get().then(data => {\n                  const items = [];\n                  data.forEach(doc => {\n                    items.push(doc.data()); //console.log(\"zxczxczxc \"+doc.data())\n                  });\n                  console.log(items);\n                  items.map(data => {\n                    if (data.isOnline) {\n                      //console.log(data.isP1team)\n                      //console.log(data.isP2team)\n                      if (data.isP1team === true) {\n                        countP1team++;\n                        setcheckUser(countP1team); // console.log(\"p1 \" + checkUser)\n                      }\n\n                      if (data.isP2team === true) {\n                        countP2team++;\n                        setcheckUser(countP2team); //console.log(\"p2 \" + checkUser)\n                      }\n                    }\n                  });\n                  ConditionToMain();\n                  setCount(items);\n                });\n              });\n            } else {\n              Alert(\"Please do a questionnaire on this link: https://www.surveymonkey.com/r/6KHX3TK. After you done please copy passcode from questionnaire and press on passcode button\", 'Please do a questionnaire');\n            }\n          });\n        } else {\n          //CustomDialog(<CustomDialogContent />, {title: 'Custom Dialog',showCloseIcon: true,})\n          Alert(\"Please verify your email\", 'Verification'); //alert(\"Please verify your email\");\n\n          checkVerify(false);\n        } //console.log(cred.user)\n\n      }).catch(error => {\n        var errorMessage = error.message;\n        Alert(errorMessage, 'Error!'); //alert(errorMessage);\n      });\n    } catch (error) {\n      Alert(error, 'Error!'); //alert(error);\n    }\n  };\n\n  function ConditionToMain() {\n    if (countP1team - countP2team > 2) {\n      alert(\"countP1team:\" + countP1team + \">\" + countP2team);\n      window.location.href = \"/MainP2\";\n    } else if (countP2team - countP1team > 2) {\n      alert(\"countP2team:\" + countP2team + \">\" + countP1team);\n      window.location.href = \"/MainP1\";\n    } else {\n      function getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n      }\n\n      let random = getRandomInt(0, 2); //alert(random)\n\n      if (random === 0) {\n        alert(\"RANDOM 0 = countP1team: \" + countP1team + \"countP2team: \" + countP2team);\n        window.location.href = \"/MainP1\";\n      } else {\n        //alert(\"asdasda 1\")\n        alert(\"RANDOM 1 = countP1team: \" + countP1team + \"countP2team: \" + countP2team);\n        window.location.href = \"/MainP2\";\n      }\n    }\n\n    db.collection('countuser').doc('onweb').update({\n      p1team: countP1team,\n      p2team: countP2team\n    });\n  }\n\n  function passcode(cPasscode) {\n    console.log(cPasscode);\n    db.collection('user').doc(currentUser.uid).get().then(data => {\n      console.log(data.data()); //checkAnswerQuestion(data.data().answerFirstQuestion);\n      //answer = data.data().answerFirstQuestion;\n      //console.log(\"zxczxczxc \"+doc.data())\n    });\n  }\n\n  const {\n    currentUser\n  } = useContext(AuthContext); //alert(verified);\n\n  if (currentUser && verified) {//console.log(currentUser.displayName)\n    //alert(verified);\n    //checkVerify(false);\n    //getCurrentUserOnWeb();\n    //getCurrentUserOnWeb();\n    //alert(random)\n\n    /*return (\r\n            <Redirect to=\"/checkRandom\" />\r\n      )*/\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row main-content bg-success text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 text-center company__info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company__logo\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fa fa-android\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 col-xs-12 col-sm-12 login_form \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"login-form\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"email\",\n                  id: \"email\",\n                  className: \"form__input\",\n                  placeholder: \"Email\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  id: \"password\",\n                  className: \"form__input\",\n                  placeholder: \"Password\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btnlogin btn-success\",\n                  type: \"submit\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btnlogin2 btn-success\",\n              onClick: async () => {\n                const cPasscode = await Prompt('Plese press a passcode', {\n                  isRequired: true,\n                  okButtonText: \"Submit\"\n                });\n\n                if (cPasscode) {\n                  passcode(cPasscode);\n                }\n              },\n              children: \"Press a passcode from surveymonkey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Register Here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogIn, \"Qwx66BCqA/ZJk+wELLJIfolPseI=\");\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["D:/Hobbies/apg-interface/src/components/LogIn.js"],"names":["React","useContext","useState","Redirect","Link","AuthContext","firebaseConfig","Alert","Prompt","LogIn","verified","checkVerify","answerQuestion","checkAnswerQuestion","checkUser","setcheckUser","db","firestore","count","setCount","answer","countP1team","countP2team","handleSubmit","e","preventDefault","email","password","target","elements","auth","signInWithEmailAndPassword","value","then","cred","user","emailVerified","collection","doc","uid","get","data","answerFirstQuestion","console","log","update","isOnline","items","forEach","push","map","isP1team","isP2team","ConditionToMain","catch","error","errorMessage","message","alert","window","location","href","getRandomInt","min","max","Math","ceil","floor","random","p1team","p2team","passcode","cPasscode","currentUser","isRequired","okButtonText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,gBAA9B;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,cAAD,EAAiBC,mBAAjB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMc,EAAE,GAAGV,cAAc,CAACW,SAAf,EAAX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIkB,MAAJ;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,WAAW,GAAG,CAAlB,CARgB,CAShB;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,CAAC,CAACI,MAAF,CAASC,QAArC;;AACA,QAAI;AACAvB,MAAAA,cAAc,CAACwB,IAAf,GAAsBC,0BAAtB,CAAiDL,KAAK,CAACM,KAAvD,EAA8DL,QAAQ,CAACK,KAAvE,EAA8EC,IAA9E,CAAmFC,IAAI,IAAI;AACvF,YAAIA,IAAI,CAACC,IAAL,CAAUC,aAAd,EAA6B;AACzBzB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAK,UAAAA,EAAE,CAACqB,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BJ,IAAI,CAACC,IAAL,CAAUI,GAApC,EAAyCC,GAAzC,GAA+CP,IAA/C,CAAoDQ,IAAI,IAAI;AACxD;AACA5B,YAAAA,mBAAmB,CAAC4B,IAAI,CAACA,IAAL,GAAYC,mBAAb,CAAnB;AACAtB,YAAAA,MAAM,GAAGqB,IAAI,CAACA,IAAL,GAAYC,mBAArB,CAHwD,CAIxD;AACH,WALD,EAKGT,IALH,CAKQ,MAAM;AACVU,YAAAA,OAAO,CAACC,GAAR,CAAYxB,MAAZ;;AACA,gBAAIA,MAAJ,EAAY;AACRJ,cAAAA,EAAE,CAACqB,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BJ,IAAI,CAACC,IAAL,CAAUI,GAApC,EAAyCM,MAAzC,CAAgD;AAC5CC,gBAAAA,QAAQ,EAAE;AADkC,eAAhD,EAEGb,IAFH,CAEQ,MAAM;AAEVjB,gBAAAA,EAAE,CAACqB,UAAH,CAAc,MAAd,EAAsBG,GAAtB,GAA4BP,IAA5B,CAAiCQ,IAAI,IAAI;AACrC,wBAAMM,KAAK,GAAG,EAAd;AACAN,kBAAAA,IAAI,CAACO,OAAL,CAAaV,GAAG,IAAI;AAChBS,oBAAAA,KAAK,CAACE,IAAN,CAAWX,GAAG,CAACG,IAAJ,EAAX,EADgB,CAEhB;AACH,mBAHD;AAIAE,kBAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAA,kBAAAA,KAAK,CAACG,GAAN,CAAUT,IAAI,IAAI;AACd,wBAAIA,IAAI,CAACK,QAAT,EAAmB;AACf;AACA;AACA,0BAAIL,IAAI,CAACU,QAAL,KAAkB,IAAtB,EAA4B;AACxB9B,wBAAAA,WAAW;AACXN,wBAAAA,YAAY,CAACM,WAAD,CAAZ,CAFwB,CAGxB;AACH;;AACD,0BAAIoB,IAAI,CAACW,QAAL,KAAkB,IAAtB,EAA4B;AACxB9B,wBAAAA,WAAW;AACXP,wBAAAA,YAAY,CAACO,WAAD,CAAZ,CAFwB,CAGxB;AACH;AACJ;AAEJ,mBAhBD;AAiBA+B,kBAAAA,eAAe;AACflC,kBAAAA,QAAQ,CAAC4B,KAAD,CAAR;AACH,iBA1BD;AA2BH,eA/BD;AAgCH,aAjCD,MAkCK;AACDxC,cAAAA,KAAK,CAAC,qKAAD,EAAwK,2BAAxK,CAAL;AACH;AACJ,WA5CD;AA6CH,SA/CD,MA+CO;AACH;AACAA,UAAAA,KAAK,CAAC,0BAAD,EAA6B,cAA7B,CAAL,CAFG,CAGH;;AACAI,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH,SArDsF,CAyDvF;;AACH,OA1DD,EA0DG2C,KA1DH,CA0DSC,KAAK,IAAI;AACd,YAAIC,YAAY,GAAGD,KAAK,CAACE,OAAzB;AACAlD,QAAAA,KAAK,CAACiD,YAAD,EAAe,QAAf,CAAL,CAFc,CAGd;AACH,OA9DD;AAiEH,KAlED,CAkEE,OAAOD,KAAP,EAAc;AACZhD,MAAAA,KAAK,CAACgD,KAAD,EAAQ,QAAR,CAAL,CADY,CAEZ;AACH;AACJ,GAzED;;AA6EA,WAASF,eAAT,GAA2B;AACvB,QAAIhC,WAAW,GAAGC,WAAd,GAA4B,CAAhC,EAAmC;AAC/BoC,MAAAA,KAAK,CAAC,iBAAiBrC,WAAjB,GAA+B,GAA/B,GAAqCC,WAAtC,CAAL;AACAqC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACH,KAHD,MAIK,IAAIvC,WAAW,GAAGD,WAAd,GAA4B,CAAhC,EAAmC;AACpCqC,MAAAA,KAAK,CAAC,iBAAiBpC,WAAjB,GAA+B,GAA/B,GAAqCD,WAAtC,CAAL;AACAsC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACH,KAHI,MAIA;AACD,eAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5BD,QAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,QAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,eAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP,CAH4B,CAG0B;AACzD;;AACD,UAAIK,MAAM,GAAGN,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAzB,CANC,CAQD;;AACA,UAAIM,MAAM,KAAK,CAAf,EAAkB;AACdV,QAAAA,KAAK,CAAC,6BAA6BrC,WAA7B,GAA2C,eAA3C,GAA6DC,WAA9D,CAAL;AAGAqC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AAEH,OAND,MAOK;AACD;AACAH,QAAAA,KAAK,CAAC,6BAA6BrC,WAA7B,GAA2C,eAA3C,GAA6DC,WAA9D,CAAL;AAEAqC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AAEH;AACJ;;AACD7C,IAAAA,EAAE,CAACqB,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+B,OAA/B,EAAwCO,MAAxC,CAA+C;AAE3CwB,MAAAA,MAAM,EAAEhD,WAFmC;AAG3CiD,MAAAA,MAAM,EAAEhD;AAHmC,KAA/C;AASH;;AAID,WAASiD,QAAT,CAAkBC,SAAlB,EAA6B;AACzB7B,IAAAA,OAAO,CAACC,GAAR,CAAY4B,SAAZ;AACAxD,IAAAA,EAAE,CAACqB,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BmC,WAAW,CAAClC,GAAtC,EAA2CC,GAA3C,GAAiDP,IAAjD,CAAsDQ,IAAI,IAAI;AAC1DE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,EAAZ,EAD0D,CAE1D;AACA;AACA;AACH,KALD;AAOH;;AAGD,QAAM;AAAEgC,IAAAA;AAAF,MAAkBxE,UAAU,CAACI,WAAD,CAAlC,CAjJgB,CAkJhB;;AACA,MAAIoE,WAAW,IAAI/D,QAAnB,EAA6B,CAEzB;AACA;AACA;AACA;AACA;AACA;;AACA;AACR;AACA;AAKK;;AAED,sBAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oCAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,iCACI;AAAA,mCAAI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAM,cAAA,EAAE,EAAC,YAAT;AAAsB,cAAA,QAAQ,EAAEa,YAAhC;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,uCACI;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,OAAxB;AAAgC,kBAAA,EAAE,EAAC,OAAnC;AAA2C,kBAAA,SAAS,EAAC,aAArD;AAAmE,kBAAA,WAAW,EAAC,OAA/E;AACI,kBAAA,QAAQ;AADZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,uCAEI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,IAAI,EAAC,UAA5B;AAAuC,kBAAA,EAAE,EAAC,UAA1C;AAAqD,kBAAA,SAAS,EAAC,aAA/D;AACI,kBAAA,WAAW,EAAC,UADhB;AAC2B,kBAAA,QAAQ;AADnC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,sBALJ,eAWI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,uCACI;AAAQ,kBAAA,SAAS,EAAC,sBAAlB;AAAyC,kBAAA,IAAI,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAuBI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,uBAAlB;AAA0C,cAAA,OAAO,EAAE,YAAY;AAC3D,sBAAMiD,SAAS,GAAG,MAAMhE,MAAM,CAAC,wBAAD,EAA2B;AACrDkE,kBAAAA,UAAU,EAAE,IADyC;AAErDC,kBAAAA,YAAY,EAAE;AAFuC,iBAA3B,CAA9B;;AAMA,oBAAIH,SAAJ,EAAe;AACXD,kBAAAA,QAAQ,CAACC,SAAD,CAAR;AACH;AACJ,eAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eAsCI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAA,iEAA0B,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHJ;AA4DH,CAhOD;;GAAM/D,K;;KAAAA,K;AAmON,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { AuthContext } from './auth'\r\nimport firebaseConfig from '../config'\r\nimport { Alert, Prompt } from 'react-st-modal'\r\n\r\n\r\nconst LogIn = () => {\r\n    const [verified, checkVerify] = useState(false);\r\n    const [answerQuestion, checkAnswerQuestion] = useState(false);\r\n    const [checkUser, setcheckUser] = useState(true);\r\n    const db = firebaseConfig.firestore();\r\n    const [count, setCount] = useState([]);\r\n    let answer;\r\n    let countP1team = 0;\r\n    let countP2team = 0;\r\n    //checkVerify(false);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = e.target.elements;\r\n        try {\r\n            firebaseConfig.auth().signInWithEmailAndPassword(email.value, password.value).then(cred => {\r\n                if (cred.user.emailVerified) {\r\n                    checkVerify(true);\r\n                    db.collection('user').doc(cred.user.uid).get().then(data => {\r\n                        //console.log(data.data().answerFirstQuestion)\r\n                        checkAnswerQuestion(data.data().answerFirstQuestion);\r\n                        answer = data.data().answerFirstQuestion;\r\n                        //console.log(\"zxczxczxc \"+doc.data())\r\n                    }).then(() => {\r\n                        console.log(answer)\r\n                        if (answer) {\r\n                            db.collection('user').doc(cred.user.uid).update({\r\n                                isOnline: true\r\n                            }).then(() => {\r\n\r\n                                db.collection('user').get().then(data => {\r\n                                    const items = [];\r\n                                    data.forEach(doc => {\r\n                                        items.push(doc.data())\r\n                                        //console.log(\"zxczxczxc \"+doc.data())\r\n                                    });\r\n                                    console.log(items)\r\n                                    items.map(data => {\r\n                                        if (data.isOnline) {\r\n                                            //console.log(data.isP1team)\r\n                                            //console.log(data.isP2team)\r\n                                            if (data.isP1team === true) {\r\n                                                countP1team++;\r\n                                                setcheckUser(countP1team)\r\n                                                // console.log(\"p1 \" + checkUser)\r\n                                            }\r\n                                            if (data.isP2team === true) {\r\n                                                countP2team++;\r\n                                                setcheckUser(countP2team)\r\n                                                //console.log(\"p2 \" + checkUser)\r\n                                            }\r\n                                        }\r\n\r\n                                    })\r\n                                    ConditionToMain();\r\n                                    setCount(items);\r\n                                })\r\n                            })\r\n                        }\r\n                        else {\r\n                            Alert(\"Please do a questionnaire on this link: https://www.surveymonkey.com/r/6KHX3TK. After you done please copy passcode from questionnaire and press on passcode button\", 'Please do a questionnaire');\r\n                        }\r\n                    })\r\n                } else {\r\n                    //CustomDialog(<CustomDialogContent />, {title: 'Custom Dialog',showCloseIcon: true,})\r\n                    Alert(\"Please verify your email\", 'Verification');\r\n                    //alert(\"Please verify your email\");\r\n                    checkVerify(false);\r\n                }\r\n\r\n\r\n\r\n                //console.log(cred.user)\r\n            }).catch(error => {\r\n                var errorMessage = error.message;\r\n                Alert(errorMessage, 'Error!');\r\n                //alert(errorMessage);\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n            Alert(error, 'Error!');\r\n            //alert(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function ConditionToMain() {\r\n        if (countP1team - countP2team > 2) {\r\n            alert(\"countP1team:\" + countP1team + \">\" + countP2team)\r\n            window.location.href = \"/MainP2\"\r\n        }\r\n        else if (countP2team - countP1team > 2) {\r\n            alert(\"countP2team:\" + countP2team + \">\" + countP1team)\r\n            window.location.href = \"/MainP1\"\r\n        }\r\n        else {\r\n            function getRandomInt(min, max) {\r\n                min = Math.ceil(min);\r\n                max = Math.floor(max);\r\n                return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n            }\r\n            let random = getRandomInt(0, 2)\r\n\r\n            //alert(random)\r\n            if (random === 0) {\r\n                alert(\"RANDOM 0 = countP1team: \" + countP1team + \"countP2team: \" + countP2team)\r\n\r\n\r\n                window.location.href = \"/MainP1\"\r\n\r\n            }\r\n            else {\r\n                //alert(\"asdasda 1\")\r\n                alert(\"RANDOM 1 = countP1team: \" + countP1team + \"countP2team: \" + countP2team)\r\n\r\n                window.location.href = \"/MainP2\"\r\n\r\n            }\r\n        }\r\n        db.collection('countuser').doc('onweb').update({\r\n\r\n            p1team: countP1team,\r\n            p2team: countP2team\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    function passcode(cPasscode) {\r\n        console.log(cPasscode)\r\n        db.collection('user').doc(currentUser.uid).get().then(data => {\r\n            console.log(data.data())\r\n            //checkAnswerQuestion(data.data().answerFirstQuestion);\r\n            //answer = data.data().answerFirstQuestion;\r\n            //console.log(\"zxczxczxc \"+doc.data())\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    //alert(verified);\r\n    if (currentUser && verified) {\r\n\r\n        //console.log(currentUser.displayName)\r\n        //alert(verified);\r\n        //checkVerify(false);\r\n        //getCurrentUserOnWeb();\r\n        //getCurrentUserOnWeb();\r\n        //alert(random)\r\n        /*return (\r\n\r\n\r\n            <Redirect to=\"/checkRandom\" />\r\n\r\n        )*/\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row main-content bg-success text-center\">\r\n                <div className=\"col-md-4 text-center company__info\">\r\n                    <span className=\"company__logo\">\r\n                        <h2><span className=\"fa fa-android\"></span></h2>\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <h2>Log In</h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <form id=\"login-form\" onSubmit={handleSubmit}>\r\n                                <div className=\"row\">\r\n                                    <input type=\"text\" name=\"email\" id=\"email\" className=\"form__input\" placeholder=\"Email\"\r\n                                        required />\r\n                                </div>\r\n                                <div className=\"row\">\r\n\r\n                                    <input type=\"password\" name=\"password\" id=\"password\" className=\"form__input\"\r\n                                        placeholder=\"Password\" required />\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <button className=\"btnlogin btn-success\" type=\"submit\">Login</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <button className=\"btnlogin2 btn-success\" onClick={async () => {\r\n                                const cPasscode = await Prompt('Plese press a passcode', {\r\n                                    isRequired: true,\r\n                                    okButtonText: \"Submit\"\r\n        \r\n                                });\r\n        \r\n                                if (cPasscode) {\r\n                                    passcode(cPasscode);\r\n                                }\r\n                            }}\r\n                            >Press a passcode from surveymonkey</button>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <p>Don't have an account? <Link to=\"/signup\" >Register Here</Link></p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}